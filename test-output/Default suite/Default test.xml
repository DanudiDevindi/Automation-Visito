<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-F1Q0CSU" failures="2" tests="34" name="Default test" time="27.453" errors="0" timestamp="2021-07-31T14:52:08 IST">
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="6.412">
    <failure type="org.openqa.selenium.NoSuchWindowException" message="no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=92.0.4515.107)
Build info: version: &amp;apos;4.0.0-alpha-6&amp;apos;, revision: &amp;apos;5f43a29cfc&amp;apos;
System info: host: &amp;apos;DESKTOP-F1Q0CSU&amp;apos;, ip: &amp;apos;192.168.8.186&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;15.0.2&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.107, chrome: {chromedriverVersion: 92.0.4515.43 (8c61b7e2989f2..., userDataDir: C:\Users\Danudi\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:4792}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 720f356dff9e490879f02e14db258d7a">
      <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=92.0.4515.107)
Build info: version: '4.0.0-alpha-6', revision: '5f43a29cfc'
System info: host: 'DESKTOP-F1Q0CSU', ip: '192.168.8.186', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.107, chrome: {chromedriverVersion: 92.0.4515.43 (8c61b7e2989f2..., userDataDir: C:\Users\Danudi\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:4792}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 720f356dff9e490879f02e14db258d7a
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:196)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:129)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:582)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:639)
at org.openqa.selenium.remote.RemoteExecuteMethod.execute(RemoteExecuteMethod.java:36)
at org.openqa.selenium.remote.html5.RemoteLocalStorage.setItem(RemoteLocalStorage.java:58)
at testBase.TestBase.LaunchBrowserAndNAvigation(TestBase.java:50)
at testBase.TestBase.setupMethod(TestBase.java:58)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:63)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:348)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:695)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:523)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723326404E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.62772332643E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723326447E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723326464E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723326504E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723326512E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723326528E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723326555E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723326574E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723326576E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723326611E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723326621E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723326701E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723326705E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723326717E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723326862E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723326868E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723326875E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723326879E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723326903E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723326908E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723327025E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723327032E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723327037E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723327043E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723327045E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723327048E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723327056E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723327063E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723327065E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723327071E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723327135E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723327147E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723327153E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723327158E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723327159E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723327166E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723327167E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723327174E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723327176E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723327181E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723327183E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723327466E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723327479E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723327488E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723327493E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723327497E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723327504E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723327513E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723327514E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723327519E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723327524E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723327532E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723327597E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723327608E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="testBase.TestBase" name="@BeforeMethod setupMethod" time="-1.627723327609E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupMethod -->
  <testcase classname="testBase.TestBase" name="@AfterMethod cleanUp" time="-1.627723327615E9">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUp -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="VisitorManagement_AddBuilding" time="0.013">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;com.aventstack.extentreports.ExtentTest.log(com.aventstack.extentreports.Status, String)&amp;quot; because &amp;quot;VisitorManagement.EndToEndTest_visitorManagement.test&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "com.aventstack.extentreports.ExtentTest.log(com.aventstack.extentreports.Status, String)" because "VisitorManagement.EndToEndTest_visitorManagement.test" is null
at VisitorManagement.EndToEndTest_visitorManagement.VisitorManagement_AddBuilding(EndToEndTest_visitorManagement.java:130)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- VisitorManagement_AddBuilding -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="VisitorManagement_AddBuilding" time="0.002">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;com.aventstack.extentreports.ExtentTest.log(com.aventstack.extentreports.Status, String)&amp;quot; because &amp;quot;VisitorManagement.EndToEndTest_visitorManagement.test&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "com.aventstack.extentreports.ExtentTest.log(com.aventstack.extentreports.Status, String)" because "VisitorManagement.EndToEndTest_visitorManagement.test" is null
at VisitorManagement.EndToEndTest_visitorManagement.VisitorManagement_AddBuilding(EndToEndTest_visitorManagement.java:130)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- VisitorManagement_AddBuilding -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="VisitorManagement_AddFloor" time="0.0">
    <skipped/>
  </testcase> <!-- VisitorManagement_AddFloor -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="VisitorManagement_AddFloor" time="0.0">
    <skipped/>
  </testcase> <!-- VisitorManagement_AddFloor -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="VisitorManagement_DeleteBuilding" time="0.0">
    <skipped/>
  </testcase> <!-- VisitorManagement_DeleteBuilding -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="VisitorManagement_DeleteFloor" time="0.0">
    <skipped/>
  </testcase> <!-- VisitorManagement_DeleteFloor -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="VisitorManagement_UpdateBuilding" time="0.001">
    <skipped/>
  </testcase> <!-- VisitorManagement_UpdateBuilding -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="VisitorManagement_UpdateBuilding" time="0.0">
    <skipped/>
  </testcase> <!-- VisitorManagement_UpdateBuilding -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="VisitorManagement_UpdateFloor" time="0.0">
    <skipped/>
  </testcase> <!-- VisitorManagement_UpdateFloor -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="VisitorManagement_UpdateFloor" time="0.0">
    <skipped/>
  </testcase> <!-- VisitorManagement_UpdateFloor -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitManagement_AddReceptionist" time="0.0">
    <skipped/>
  </testcase> <!-- visitManagement_AddReceptionist -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitManagement_OverdueCheckedIn" time="0.0">
    <skipped/>
  </testcase> <!-- visitManagement_OverdueCheckedIn -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitManagement_OverdueCheckedIn" time="0.0">
    <skipped/>
  </testcase> <!-- visitManagement_OverdueCheckedIn -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitManagemet_UpdateReceptionist" time="0.0">
    <skipped/>
  </testcase> <!-- visitManagemet_UpdateReceptionist -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitmanagement_ManageBuildings" time="0.0">
    <skipped/>
  </testcase> <!-- visitmanagement_ManageBuildings -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitmanagement_ManageBuildings" time="0.0">
    <skipped/>
  </testcase> <!-- visitmanagement_ManageBuildings -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitorManagement_AddStaff" time="0.0">
    <skipped/>
  </testcase> <!-- visitorManagement_AddStaff -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitorManagement_AddStaff" time="0.0">
    <skipped/>
  </testcase> <!-- visitorManagement_AddStaff -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitorManagement_CheckInVisitors" time="0.0">
    <skipped/>
  </testcase> <!-- visitorManagement_CheckInVisitors -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitorManagement_CheckInVisitors" time="0.0">
    <skipped/>
  </testcase> <!-- visitorManagement_CheckInVisitors -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitorManagement_CheckedInVisitorTable" time="0.0">
    <skipped/>
  </testcase> <!-- visitorManagement_CheckedInVisitorTable -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitorManagement_CheckedInVisitors" time="0.0">
    <skipped/>
  </testcase> <!-- visitorManagement_CheckedInVisitors -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitorManagement_CheckedInVisitors" time="0.0">
    <skipped/>
  </testcase> <!-- visitorManagement_CheckedInVisitors -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitorManagement_CheckedInVisitors" time="0.0">
    <skipped/>
  </testcase> <!-- visitorManagement_CheckedInVisitors -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitorManagement_CheckedOutVisitors" time="0.0">
    <skipped/>
  </testcase> <!-- visitorManagement_CheckedOutVisitors -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitorManagement_CheckedOutVisitors" time="0.0">
    <skipped/>
  </testcase> <!-- visitorManagement_CheckedOutVisitors -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitormanagement_EditStaff" time="0.0">
    <skipped/>
  </testcase> <!-- visitormanagement_EditStaff -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitormanagement_EditStaff" time="0.0">
    <skipped/>
  </testcase> <!-- visitormanagement_EditStaff -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitorManagemet_Login" time="0.0">
    <skipped/>
  </testcase> <!-- visitorManagemet_Login -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitorManagemet_Login" time="0.0">
    <skipped/>
  </testcase> <!-- visitorManagemet_Login -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitorManagemet_Login" time="0.0">
    <skipped/>
  </testcase> <!-- visitorManagemet_Login -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitManagement_SearchSystemUser" time="0.0">
    <skipped/>
  </testcase> <!-- visitManagement_SearchSystemUser -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitorManagement_SearchStaff" time="0.0">
    <skipped/>
  </testcase> <!-- visitorManagement_SearchStaff -->
  <testcase classname="VisitorManagement.EndToEndTest_visitorManagement" name="visitorManagement_SearchStaff" time="0.0">
    <skipped/>
  </testcase> <!-- visitorManagement_SearchStaff -->
</testsuite> <!-- Default test -->
